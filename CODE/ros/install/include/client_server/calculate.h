// Generated by gencpp from file client_server/calculate.msg
// DO NOT EDIT!


#ifndef CLIENT_SERVER_MESSAGE_CALCULATE_H
#define CLIENT_SERVER_MESSAGE_CALCULATE_H

#include <ros/service_traits.h>


#include <client_server/calculateRequest.h>
#include <client_server/calculateResponse.h>


namespace client_server
{

struct calculate
{

typedef calculateRequest Request;
typedef calculateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct calculate
} // namespace client_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::client_server::calculate > {
  static const char* value()
  {
    return "d64ae8c16bfa9c85587ea117ae2364cb";
  }

  static const char* value(const ::client_server::calculate&) { return value(); }
};

template<>
struct DataType< ::client_server::calculate > {
  static const char* value()
  {
    return "client_server/calculate";
  }

  static const char* value(const ::client_server::calculate&) { return value(); }
};


// service_traits::MD5Sum< ::client_server::calculateRequest> should match 
// service_traits::MD5Sum< ::client_server::calculate > 
template<>
struct MD5Sum< ::client_server::calculateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::client_server::calculate >::value();
  }
  static const char* value(const ::client_server::calculateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::client_server::calculateRequest> should match 
// service_traits::DataType< ::client_server::calculate > 
template<>
struct DataType< ::client_server::calculateRequest>
{
  static const char* value()
  {
    return DataType< ::client_server::calculate >::value();
  }
  static const char* value(const ::client_server::calculateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::client_server::calculateResponse> should match 
// service_traits::MD5Sum< ::client_server::calculate > 
template<>
struct MD5Sum< ::client_server::calculateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::client_server::calculate >::value();
  }
  static const char* value(const ::client_server::calculateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::client_server::calculateResponse> should match 
// service_traits::DataType< ::client_server::calculate > 
template<>
struct DataType< ::client_server::calculateResponse>
{
  static const char* value()
  {
    return DataType< ::client_server::calculate >::value();
  }
  static const char* value(const ::client_server::calculateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CLIENT_SERVER_MESSAGE_CALCULATE_H
